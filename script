echo "Generating DEL candidates"
#cnmops output format example:
#chr1    632000  634000  CN0
#chr1    124740000       124742000       CN0,CN1
cat inputs/COLO829_normal.full_sample.test.cnvs.annotate.bed | sed 's/UG-CNV-LCR//g' | sed 's/LEN//g' | sed 's/|//g' | grep -E "CN0|CN1" | \
    bedtools merge -c 4 -o distinct -d 1500 -i - \
    > COLO829_normal.full_sample.test.cnmops.DEL.merged.bed

#cnvpytor output format example: 
#chr1    123468001       124437000       deletion,969000
#chr1    124440001       124511500       deletion,16500,deletion,54000
cat inputs/COLO829_normal.full_sample.test.pytor.bin500.CNVs.tsv | grep "deletion" | awk '{print $2"\t"$3"\t"$4"\t"$1","$5}' | \
    bedtools merge -c 4 -o distinct -d 1500 -i - \
    > COLO829_normal.full_sample.test.cnvpytor.DEL.merged.bed

cat COLO829_normal.full_sample.test.cnmops.DEL.merged.bed COLO829_normal.full_sample.test.cnvpytor.DEL.merged.bed | \
    bedtools sort -i - \
    > COLO829_normal.full_sample.test.cnmops_cnvpytor.DEL.bed

echo "split DEL candidates for parallel processing"
mkdir cnmops500mod_cnvpytor500_DEL_split
cat COLO829_normal.full_sample.test.cnmops_cnvpytor.DEL.bed | split -l 10 -d --additional-suffix .bed
mv x*.bed cnmops500mod_cnvpytor500_DEL_split/

########################################################################

echo "Running jalign for DEL candidates"

python /jalign/scripts/parallel_run_cnv_realign.py \
    --folder_with_cnv_del_bed_files cnmops500mod_cnvpytor500_DEL_split \
    --input_cram inputs/normal.031865-Lb_2212-Z0134-CTTCAGCATACAGAT.cram \
    --ref_fasta inputs/Homo_sapiens_assembly38.fasta \
    --out_folder out_jalign \
    --sample_name COLO829_normal.full_sample.test \
    --num_jobs 36
